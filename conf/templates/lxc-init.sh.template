#!/bin/bash -

EMANE_EXP_ROOT=@EMANEEXPROOT@

NODEID=@NODEID@

LXC_NODE_CONFIG_ROOT=@LXCNODEROOT@

EMANE_TRANSPORTDAEMON_XML="$EMANE_EXP_ROOT/transportdaemon$NODEID.xml"

EMANE_PLATFORM_XML="$EMANE_EXP_ROOT/platform$NODEID.xml"

EMANE_EVENTDAEMON_XML="$EMANE_EXP_ROOT/eventdaemon$NODEID.xml"

MGEN_INPUT_SPECIFIC="$EMANE_EXP_ROOT/mgen$NODEID"

MGEN_INPUT_COMMON="$EMANE_EXP_ROOT/mgen"

ROUTING_CONF_SPECIFIC="$EMANE_EXP_ROOT/routing$NODEID.conf"

ROUTING_CONF_COMMON="$EMANE_EXP_ROOT/routing.conf"

ROUTING_LOG_FILE="$LXC_NODE_CONFIG_ROOT/var/log/routing.log"

ROUTING_COMMAND=@ROUTINGCOMMAND@

starttime=

program=$(basename $0)

. "$EMANE_EXP_ROOT/../templates/functions"

echo_usage()
{
    echo
    echo usage: $PROGRAM [OPTIONS]
    echo
    echo " parameters:"
    echo "  -s STARTTIME  Demo scenarion start time HH:MM:SS"
    echo "  -e ENVFILE  Environment file to source"
    echo
}




# process options
while getopts ":s:e:h" opt; do
    case $opt in
        s)
            starttime=$OPTARG
            ;;
        h)
            echo_usage
            exit 0
            ;;
        e)
            . "$OPTARG"
            ;;   
        \?)
            echo "Invalid option: -$OPTARG"
            exit 1
            ;;
    esac
done

shift $((OPTIND-1))

start_emanetransportd \
    "$EMANE_TRANSPORTDAEMON_XML" \
    "$LXC_NODE_CONFIG_ROOT/var/log/transportdaemon.log"

if [ -f "$EMANE_PLATFORM_XML" ]; then

    start_emane \
        "$EMANE_PLATFORM_XML" \
        "$LXC_NODE_CONFIG_ROOT/var/log/emane.log"

fi

if [ -f "$EMANE_EVENTDAEMON_XML" ]; then

    start_emaneeventd_and_wait_for_gpspty \
        "$EMANE_EVENTDAEMON_XML" \
        "$LXC_NODE_CONFIG_ROOT/var/log/emaneeventd.log" \
        "$LXC_NODE_CONFIG_ROOT/var/lib/gps.pty"

    start_gpsd "$LXC_NODE_CONFIG_ROOT/var/lib/gps.pty"

fi

#if [ -f "$ROUTING_CONF_SPECIFIC" ]; then

#    wait_for_device emane0 10

#    start_routing "$ROUTING_COMMAND" "$ROUTING_CONF_SPECIFIC"

#elif [ -f "$ROUTING_CONF_COMMON" ]; then

#    wait_for_device emane0 10

#    start_routing "$ROUTING_COMMAND" "$ROUTING_CONF_COMMON"

# fi

if [ -f "$MGEN_INPUT_SPECIFIC" ]; then

    wait_for_device emane0 10

    start_mgen \
        "$MGEN_INPUT_SPECIFIC" \
        "$LXC_NODE_CONFIG_ROOT/var/log/mgen.out" \
        $starttime

elif [ -f "$MGEN_INPUT_COMMON" ]; then

    wait_for_device emane0 10

    start_mgen \
        "$MGEN_INPUT_COMMON" \
        "$LXC_NODE_CONFIG_ROOT/var/log/mgen.out" \
        $starttime
fi

wait_for_decive emane0 10

sudo @ROUTINGCOMMAND@ "$ROUTING_CONF_SPECIFIC" >> "$ROUTING_LOG_FILE" 2>&1
#sudo nice -20 su -c 'olsrd -f /home/user/Desktop/emane-TimeKeeper/conf/experiment/routing@NODEID@.conf' >> "$ROUTING_LOG_FILE" 2>&1 
#sudo olsrd -f /home/user/Desktop/emane-TimeKeeper/conf/experiment/routing@NODEID@.conf >> "$ROUTING_LOG_FILE" 2>&1


#sudo arp -f "$EMANE_EXP_ROOT/arp_table.txt" >> "$EMANE_EXP_ROOT/arp_error_log$NODEID.txt" 2>&1

start_sshd "$LXC_NODE_CONFIG_ROOT/run/sshd.pid"

#/home/vignesh/emane-Timekeeper/dilation-code/scripts/print_time 1000 >> /home/vignesh/emane-Timekeeper/temp$NODEID.txt 2>&1

#sleep 2 # Wait for 2 seconds for olsrd to boot up

@LXC_COMMAND@
